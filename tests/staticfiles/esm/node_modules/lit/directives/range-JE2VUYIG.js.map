{
  "version": 3,
  "sources": ["../../../../../node_modules/lit-html/src/directives/range.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Returns an iterable of integers from `start` to `end` (exclusive)\n * incrementing by `step`.\n *\n * If `start` is omitted, the range starts at `0`. `step` defaults to `1`.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${map(range(8), () => html`<div class=\"cell\"></div>`)}\n *   `;\n * }\n * ```\n */\nexport function range(end: number): Iterable<number>;\nexport function range(\n  start: number,\n  end: number,\n  step?: number\n): Iterable<number>;\nexport function* range(startOrEnd: number, end?: number, step = 1) {\n  const start = end === undefined ? 0 : startOrEnd;\n  end ??= startOrEnd;\n  for (let i = start; step > 0 ? i < end : end < i; i += step) {\n    yield i;\n  }\n}\n"],
  "mappings": ";AA4BM,SAAWA,EAAMC,EAAoBC,EAAcC,EAAO,EAAA,CAC9D,IAAMC,EAAQF,IAARE,OAA4B,EAAIH,EACtCC,MAAQD,GACR,QAASI,EAAID,EAAOD,EAAO,EAAIE,EAAIH,EAAMA,EAAMG,EAAGA,GAAKF,EAAAA,MAC/CE,CAEV",
  "names": ["range", "startOrEnd", "end", "step", "start", "i"]
}
